paths:
  /api/products/:
    get:
      summary: Obtener todos los productos
      description: Devuelve todos los productos de la base de datos. Cuenta con parametros opcionales (limit, sort, page, category, status)
      tags:
        - Products
      responses:
        "200":
          description: Productos devueltos con éxito, la respuesta incluye un array de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor, generalmente un problema con la base de datos
    post:
      summary: Crear un producto
      description: Crea un nuevo producto en la base de datos, solo permitido para usuarios autenticados con el rol de admin o premium
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addProduct"
      responses:
        "200":
          description: Producto creado con éxito
        "401":
          description: No autorizado, generalmente debido a un token inválido
        "403":
          description: Prohibido, generalmente por falta de permisos
        "500":
          description: Error del servidor, generalmente un problema con la base de datos
  /api/products/{pid}:
    get:
      summary: Obtener un producto por su ID
      description: Devuelve un producto por su ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Id del producto a obtener
          schema:
            $type: string
      responses:
        "200":
          description: Producto devuelto con éxito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado, generalmente por un producto inexistente
        "500":
          description: Error del servidor, generalmente un problema con la base de datos o por un ID inválido
    put:
      summary: Actualizar un producto
      description: Actualiza el producto seleccionado por ID, solo permitido para usuarios autenticados con el rol de admin o premium. El usuario solo puede modificar su producto
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Id del producto a actualizar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: Producto actualizado con éxito
        "401":
          description: No autorizado, generalmente debido a un token inválido
        "403":
          description: Prohibido, generalmente por falta de permisos
        "500":
          description: Error del servidor, generalmente un problema con la base de datos o por un ID inválido
    delete:
      summary: Eliminar un producto
      description: Elimina el producto seleccionado por ID, solo permitido para usuarios autenticados con el rol de admin o premium. El usuario solo puede eliminar su producto
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Id del producto a eliminar
          schema:
            $type: string
      responses:
        "200":
          description: Producto eliminado con éxito
        "401":
          description: No autorizado, generalmente debido a un token inválido
        "403":
          description: Prohibido, generalmente por falta de permisos
        "412":
          description: El producto no puede ser eliminado, generalmente porque no existe
        "500":
          description: Error del servidor, generalmente un problema con la base de datos o por un ID inválido
  /api/products/mockingproducts/:
    get:
      summary: Obtener productos mockeados
      description: Devuelve 100 productos mockeados para pruebas
      tags:
        - Products
      responses:
        "200":
          description: Productos mockeados devueltos con éxito, la respuesta incluye un array de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor, generalmente un problema con la base de datos

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por la base de datos
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        code:
          type: string
          description: Código del producto, campo único
        stock:
          type: number
          description: Stock del producto
        status:
          type: string
          description: Estado del producto, puede ser 'true' o 'false'. Por defecto es 'true'
        category:
          type: string
          description: Categoría del producto
        thumbnails:
          type: array
          items:
            type: string
          description: Imágenes del producto, campo opcional
        owner:
          type: string
          description: Dueño del producto, por defecto es 'admin'
      example:
        _id: 60f3b3b3b3b3b3b3b3b3b3b3
        title: "Producto 1"
        description: "Descripción del producto 1"
        price: 100
        code: "P1"
        stock: 10
        status: "true"
        category: "Categoria 1"
        thumbnails: ["thumbnail1.jpg", "thumbnail2.jpg"]
        owner: "admin"
  requestBodies:
    addProduct:
      type: object
      properties:
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        code:
          type: string
          description: Código del producto, campo único
        stock:
          type: number
          description: Stock del producto
        status:
          type: string
          description: Estado del producto, puede ser 'true' o 'false'. Por defecto es 'true'
        category:
          type: string
          description: Categoría del producto
        thumbnails:
          type: array
          items:
            type: string
          description: Imágenes del producto, campo opcional
      example:
        title: "Producto 1"
        description: "Descripción del producto 1"
        price: 100
        code: "P1"
        stock: 10
        status: "true"
        category: "Categoria 1"
        thumbnails: ["thumbnail1.jpg", "thumbnail2.jpg"]
    updateProduct:
      type: object
      properties:
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        code:
          type: string
          description: Código del producto, campo único
        stock:
          type: number
          description: Stock del producto
        status:
          type: string
          description: Estado del producto, puede ser 'true' o 'false'. Por defecto es 'true'
        category:
          type: string
          description: Categoría del producto
        thumbnails:
          type: array
          items:
            type: string
          description: Imágenes del producto, campo opcional
      example:
        title: "Producto 1"
        description: "Descripción del producto 1"
        price: 100
        code: "P1"
        stock: 10
        status: "true"
        category: "Categoria 1"
        thumbnails: ["thumbnail1.jpg", "thumbnail2.jpg"]